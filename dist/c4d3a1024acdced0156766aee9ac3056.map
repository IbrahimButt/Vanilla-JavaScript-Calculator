{"version":3,"sources":["../js/calculate.js","../js/view.js","../js/state.js","../js/handlers.js","../js/main.js"],"names":["operatorMap","value","association","operate","leftOperand","rightOperand","Number","shuntingYard","userInput","outputQueue","operatorStack","isTopOfStackOperatorPrecedenceGreater","currentOperator","length","isTopOfStackOperatorPrecedenceEqualAndSameAssociation","operatorAtTopOfStackIsNotLeftBracket","forEach","token","push","hasOwnProperty","pop","postfixCalculator","stack","toString","view","buttonAnimation","buttonPressed","classList","add","setTimeout","remove","updateChromaticEffect","inputDisplay","setAttribute","textContent","state","operatorLastPressed","store","handlers","clearAll","innerText","removeFormatting","input","includes","replace","addFormatting","toExponential","addCommas","inlcudesDecimal","afterDecimalPortionOfValue","split","map","x","join","toFixed","valueWithCommas","reverse","i","slice","onDigitPress","console","log","onOperatorPress","onPlusMinusPress","onPercentPress","calculateTotal","document","getElementById","addEventListener","e","target","currentInput","newInput"],"mappings":"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","file":"c4d3a1024acdced0156766aee9ac3056.map","sourcesContent":["const operatorMap = {\n  '^': {\n    value: 3,\n    association: 'right',\n    operate(leftOperand, rightOperand) {\n      return leftOperand ** rightOperand;\n    }\n  },\n  'ร': {\n    value: 3,\n    association: 'left',\n    operate(leftOperand, rightOperand) {\n      return leftOperand * rightOperand;\n    }\n  },\n  'รท': {\n    value: 3,\n    association: 'left',\n    operate(leftOperand, rightOperand) {\n      return leftOperand / rightOperand;\n    }\n  },\n  '+': {\n    value: 2,\n    association: 'left',\n    operate(leftOperand, rightOperand) {\n      return Number(leftOperand) + Number(rightOperand);\n    }\n  },\n  '-': {\n    value: 2,\n    association: 'left',\n    operate(leftOperand, rightOperand) {\n      return leftOperand - rightOperand;\n    }\n  },\n  '(': {\n    value: 5\n  },\n  ')': {\n    value: 5\n  }\n};\n\nconst shuntingYard = (userInput) => {\n  const outputQueue = [];\n  const operatorStack = [];\n\n  const isTopOfStackOperatorPrecedenceGreater = (currentOperator) => {\n    const value = operatorStack.length < 1 ?\n      0 : operatorMap[operatorStack[operatorStack.length - 1]].value;\n    return value > operatorMap[currentOperator].value;\n  };\n\n  const isTopOfStackOperatorPrecedenceEqualAndSameAssociation = (currentOperator) => {\n    const value = operatorStack.length < 1 ?\n      0 : operatorMap[operatorStack[operatorStack.length - 1]].value;\n    return (value === operatorMap[currentOperator].value &&\n      operatorMap[currentOperator].association === 'left');\n  };\n\n  const operatorAtTopOfStackIsNotLeftBracket = () => (\n    operatorStack[operatorStack.length - 1] !== '('\n  );\n\n  userInput.forEach((token) => {\n    if (Number(token)) {\n      outputQueue.push(token);\n    } else if (\n      (operatorMap.hasOwnProperty(token) &&\n        token !== ')' && token !== '(')\n    ) {\n      while (\n        (isTopOfStackOperatorPrecedenceGreater(token) ||\n          isTopOfStackOperatorPrecedenceEqualAndSameAssociation(token))\n        && operatorAtTopOfStackIsNotLeftBracket()\n      ) {\n        outputQueue.push(operatorStack.pop());\n      }\n      operatorStack.push(token);\n    } else if (token === '(') {\n      operatorStack.push(token);\n    } else if (token === ')') {\n      while (operatorAtTopOfStackIsNotLeftBracket()) {\n        outputQueue.push(operatorStack.pop());\n      }\n      operatorStack.pop();\n    }\n  });\n\n  operatorStack.forEach(() => {\n    outputQueue.push(operatorStack.pop());\n  });\n\n  return outputQueue;\n};\n\nconst postfixCalculator = (outputQueue) => {\n  const stack = [];\n  outputQueue.forEach((token) => {\n    if (Number(token)) {\n      stack.push(token);\n    } else {\n      const rightOperand = stack.pop();\n      const leftOperand = stack.pop();\n      stack.push(operatorMap[token].operate(leftOperand, rightOperand));\n    }\n  });\n  return stack[0].toString();\n};\n\nexport {shuntingYard, postfixCalculator};","const view = {\n  buttonAnimation(buttonPressed) {\n    buttonPressed.classList.add('active');\n    setTimeout(() => {\n      buttonPressed.classList.remove('active');\n    }, 750);\n  },\n  updateChromaticEffect(inputDisplay) {\n    inputDisplay.setAttribute(\"node-content\", inputDisplay.textContent);\n  },\n}\n\nexport default view;","const state = {\n  operatorLastPressed: false,\n  store: []\n};\n\nexport default state;","import state from './state';\nimport { shuntingYard, postfixCalculator } from './calculate';\n\nconst handlers = {\n  clearAll(inputDisplay) {\n    inputDisplay.innerText = 0;\n    state.store = []\n    state.operatorLastPressed = false;\n  },\n  removeFormatting(input) {\n    return input.includes('e') ?\n      Number(input).toString() :\n      input.replace(/,/g, '');\n  },\n  addFormatting(input) {\n    return input > 999999999 ?\n      Number(input).toExponential(2).toString() :\n      this.addCommas(input);\n  },\n  addCommas(input) {\n    let inlcudesDecimal = false;\n    let afterDecimalPortionOfValue;\n    if (input.includes('.')) {\n      afterDecimalPortionOfValue = input\n        .split('')\n        .map((x) => {\n          if (x === '.') {\n            inlcudesDecimal = true;\n            return x;\n          } else if (inlcudesDecimal) {\n            return x;\n          }\n        })\n        .join('');\n\n      afterDecimalPortionOfValue = afterDecimalPortionOfValue === '.' ?\n        '.' :\n        Number(afterDecimalPortionOfValue).toFixed(\n          afterDecimalPortionOfValue.length > 2 ? 2 : 1\n        ).toString().replace(/^0/, '');\n    }\n\n    const valueWithCommas = input\n      // Remove portion after decimals\n      .replace(/\\..*/, '')\n      .split('')\n      .reverse()\n      .map((x, i) => {\n        return (i % 3 === 0 ? x + ',' : x);\n      })\n      .reverse()\n      .join('')\n      // Remove extra comma\n      .slice(0, -1);\n\n    return valueWithCommas + (afterDecimalPortionOfValue || '')\n  },\n  onDigitPress(input, buttonPressed) {\n    if (\n      (input === '0' && buttonPressed !== '.') ||\n      state.operatorLastPressed\n    ) {\n      state.operatorLastPressed = false;\n      return buttonPressed;\n    } else if (input === '0' && buttonPressed === '.') {\n      console.log(123)\n      state.operatorLastPressed = false;\n      return '0.'\n    } else if (buttonPressed === '.' && input.includes('.')) {\n      return false;\n    } else {\n      state.operatorLastPressed = false;\n      return input + buttonPressed;\n    }\n  },\n  onOperatorPress(input, buttonPressed) {\n    if (input === '0') {\n      return false;\n    } else if (state.operatorLastPressed) {\n      state.store.pop();\n      state.store.push(buttonPressed);\n    } else {\n      state.store.push(input);\n      const userInput = state.store;\n      const outputQueue = shuntingYard(userInput);\n      state.store = [postfixCalculator(outputQueue)];\n      state.store.push(buttonPressed);\n      state.operatorLastPressed = true;\n      return state.store[0];\n    }\n  },\n  onPlusMinusPress(input) {\n    return input > 0 ? '-' + input : input.replace(/^-/, '');\n  },\n  onPercentPress(input) {\n    return (input / 100).toString();\n  },\n  calculateTotal(input) {\n    state.store.push(input);\n    console.log(state.store)\n    const userInput = state.store;\n    const outputQueue = shuntingYard(userInput);\n    state.store = [postfixCalculator(outputQueue)];\n    state.operatorLastPressed = true;\n    console.log(state.store[0])\n    return state.store[0];\n  }\n};\n\nexport default handlers;","import { shuntingYard, postfixCalculator } from './calculate';\nimport view from './view';\nimport handlers from './handlers';\nimport state from './state';\n\nconst inputDisplay = document.getElementById('calculator__display');\n\ndocument.getElementById('calculator__bottom').addEventListener('click', (e) => {\n  const buttonPressed = e.target.textContent;\n  let currentInput = handlers.removeFormatting(inputDisplay.textContent);\n  let newInput;\n\n  if (Number(buttonPressed) || buttonPressed === '.' || buttonPressed === '0') {\n    newInput = handlers.onDigitPress(currentInput, buttonPressed)\n  }\n  else if (buttonPressed === '+/-') {\n    newInput = handlers.onPlusMinusPress(currentInput);\n  } \n  else if (buttonPressed === '%') {\n    newInput = handlers.onPercentPress(currentInput);\n  } \n  else if (buttonPressed === 'AC') {\n    handlers.clearAll(inputDisplay);\n    newInput = '0';\n\n  } else if (buttonPressed === '=') {\n    newInput = state.store[1] ? handlers.calculateTotal(currentInput) : currentInput;\n  }\n  else {\n    newInput = handlers.onOperatorPress(currentInput, buttonPressed) || currentInput;\n  }\n  inputDisplay.textContent = handlers.addFormatting(newInput);\n  view.buttonAnimation(e.target)\n  view.updateChromaticEffect(inputDisplay);\n});\n"]}